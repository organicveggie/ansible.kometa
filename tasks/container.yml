---
- name: "Set Docker volume list for bind mounts"
  ansible.builtin.set_fact:
    _pmm_docker_mount_list:
      - source: "{{ pmm_docker_data_dir }}"
        target: "/config"
        type: "bind"
  when: "not pmm_docker_use_volumes"

- name: "Set Docker mount list for volume mounts"
  ansible.builtin.set_fact:
    _pmm_docker_mount_list:
      - source: "{{ pmm_docker_volume_name }}"
        target: "/config"
        type: "volume"
  when: "pmm_docker_use_volumes"

- name: "Convert created network into array of dictionary"
  ansible.builtin.set_fact:
    _pmm_docker_created_networks:
      - name: "{{ pmm_docker_network }}"
        ipv4_address: "{{ _pmm_docker_network_ipv4 | default(omit) }}"
        ipv6_address: "{{ _pmm_docker_network_ipv6 | default(omit) }}"
        aliases: "{{ _pmm_docker_network_aliases | default(omit) }}"
  when: "pmm_docker_network_create"

- name: "Create placeholder array for created network"
  ansible.builtin.set_fact:
    _pmm_docker_created_networks: []
  when: "not pmm_docker_network_create"

- name: "Define all Docker networks for this container"
  ansible.builtin.set_fact:
    _pmm_docker_all_networks: >
      {{ _pmm_docker_created_networks + pmm_docker_extra_networks }}

- name: "Create Plex Meta Manager Docker container"  # noqa: args[module]
  community.docker.docker_container:
    name: "{{ pmm_docker_name }}"
    image: "{{ pmm_docker_image_name }}:{{ pmm_docker_image_version }}"
    pull: true
    mounts: "{{ _pmm_docker_mount_list }}"
    dns: "{{ pmm_docker_dns_servers | default(omit) }}"
    env:
      "TZ": "{{ pmm_docker_timezone }}"
    network_mode: "{{ pmm_docker_network }}"
    networks: "{{ _pmm_docker_all_networks }}"
    restart_policy: unless-stopped
    restart: "{{ _pmm_docker_config.changed | default(false) }}"
    memory: "{{ pmm_docker_memory }}"
    cpus: "{{ pmm_docker_cpus }}"
    container_default_behavior: "no_defaults"
    auto_remove: false
    detach: true
    init: true
    interactive: true
    paused: false
    privileged: false
    read_only: false
    tty: true
